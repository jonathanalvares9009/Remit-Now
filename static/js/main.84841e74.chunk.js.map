{"version":3,"sources":["Footer/Footer.js","utils/transferMoney.js","Body/Transfer.js","Body/Body.js","utils/login.js","utils/logout.js","Header/Header.js","App.js","index.js"],"names":["Footer","e","a","preventDefault","from","target","value","to","amount","web3","window","eth","getAccounts","account","decentralBank","Contract","DecentralBank","abi","methods","transferToAccount","send","transfer","document","getElementById","reset","location","reload","transferMoney","Transfer","props","Form","onSubmit","id","Group","className","controlId","Label","Control","type","readOnly","placeholder","sender","required","min","max","step","style","margin","width","Button","variant","Body","ethereum","Web3","enable","currentProvider","alert","login","logout","Header","React","useState","modalShow","setModalShow","session","isLoggedIn","Nav","Link","onClick","Navbar","expand","Container","Brand","href","Toggle","Collapse","balance","Modal","size","show","onHide","centered","closeButton","Title","App","state","this","loadBlockchainData","setState","call","decentralBankBalance","toString","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.84841e74.chunk.js","sourcesContent":["import \"./Footer.css\";\n\nfunction Footer() {\n    return (\n        <footer>Made with <span>&hearts;</span> in Goa</footer>\n    );\n}\n\nexport default Footer;\n","import DecentralBank from \"abi/DecentralBank.json\";\n\nasync function transferMoney(e) {\n  e.preventDefault();\n  const from = e.target[0].value;\n  const to = e.target[1].value;\n  const amount = e.target[2].value;\n\n  const web3 = window.web3;\n\n  const account = await window.web3.eth.getAccounts();\n  // Get network ID\n  //   const networkID = await web3.eth.net.getId();\n\n  // Load DecentralBank contract\n  //   const decentralBankData = await DecentralBank.networks[networkID];\n  //   if (decentralBankData) {\n  const decentralBank = new web3.eth.Contract(\n    DecentralBank.abi,\n    \"0xB32900E517B1ad2115fF7c501Fa836D0C891D265\"\n  );\n  const transfer = () => {\n    decentralBank.methods\n      .transferToAccount(from, to, amount)\n      .send({ from: account[0] });\n  };\n  transfer();\n  //   } else {\n  //     window.alert(\"DecentralBankbalance not deployed\");\n  //   }\n\n  document.getElementById(\"form\").reset();\n  window.location.reload();\n}\n\nexport default transferMoney;\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport transferMoney from \"../utils/transferMoney\";\n\nfunction Transfer(props) {\n  return (\n    <Form onSubmit={transferMoney} id=\"form\">\n      <Form.Group className=\"mb-3\" controlId=\"senderAddress\">\n        <Form.Label>Sender Address</Form.Label>\n        <Form.Control\n          type=\"plaintext\"\n          readOnly\n          placeholder={props.sender}\n          value={props.sender}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"receiverCountry\">\n        <Form.Label>Receiver Address</Form.Label>\n        <Form.Control type=\"plaintext\" required />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"amount\">\n        <Form.Label>Amount</Form.Label>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"0\"\n          min=\"0\"\n          max=\"100000\"\n          step=\"0.1\"\n          style={{ margin: \"0 auto\", width: \"25vw\" }}\n          required\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n\nexport default Transfer;\n","import \"./Body.css\";\nimport React from \"react\";\nimport Transfer from \"./Transfer\";\n\nfunction Body(props) {\n  return (\n    <main>\n      <Transfer sender={props.sender} />\n    </main>\n  );\n}\n\nexport default Body;\n","import Web3 from \"web3\";\n\nasync function login() {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    await window.ethereum.enable();\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n  } else {\n    window.alert(\"No ethreum wallet detected!!!\");\n  }\n}\n\nexport default login;\n","function logout() {\n  if (window.web3) {\n    window.alert(\n      \"To logout go to your wallet and disconnect and reload the page after disconnecting.\"\n    );\n  }\n}\n\nexport default logout;\n","import Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport login from \"../utils/login\";\nimport logout from \"../utils/logout\";\nimport React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction Header(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const session = props.isLoggedIn ? (\n    <Nav.Link onClick={logout}>Logout</Nav.Link>\n  ) : (\n    <Nav.Link onClick={login}>Login</Nav.Link>\n  );\n\n  return (\n    <>\n      <header>\n        <Navbar variant=\"dark\" expand=\"lg\">\n          <Container>\n            <Navbar.Brand href=\"#home\">RemitNow</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav>\n                <Nav.Link>Send Money</Nav.Link>\n                <Nav.Link>Balance: ${props.balance}</Nav.Link>\n                <Nav.Link>Transactions</Nav.Link>\n                <Nav.Link onClick={() => setModalShow(true)}>\n                  {props.account}\n                </Nav.Link>\n                {session}\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </header>\n\n      <Modal\n        size=\"lg\"\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Account Details\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Account Number: {props.account}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setModalShow(false)}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Header;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Footer from \"./Footer/Footer\";\nimport Body from \"./Body/Body\";\nimport Header from \"./Header/Header\";\nimport login from \"./utils/login\";\nimport DecentralBank from \"abi/DecentralBank.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"0x00000\",\n      isLoggedIn: false,\n      balance: \"0\",\n    };\n  }\n\n  async UNSAFE_componentWillMount() {\n    await login();\n    await this.loadBlockchainData();\n    if (window.web3) {\n      const account = await window.web3.eth.getAccounts();\n      this.setState({ account: account[0] });\n      this.setState({ isLoggedIn: true });\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    // Get network ID\n    // const networkID = await web3.eth.net.getId();\n\n    const account = await window.web3.eth.getAccounts();\n\n    // Load DecentralBank contract\n    // const decentralBankData = await DecentralBank.networks[networkID];\n    // if (decentralBankData) {\n    const decentralBank = new web3.eth.Contract(\n      DecentralBank.abi,\n      \"0xB32900E517B1ad2115fF7c501Fa836D0C891D265\"\n    );\n    let decentralBankBalance = await decentralBank.methods\n      .account(account[0])\n      .call();\n    this.setState({ balance: decentralBankBalance.toString() });\n    // } else {\n    //   window.alert(\"DecentralBankbalance not deployed\");\n    // }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          balance={this.state.balance}\n          account={this.state.account}\n          isLoggedIn={this.state.isLoggedIn}\n        />\n        <Body sender={this.state.account} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}